#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#define ALFA 0
#define PUNC 1
#define FUNC 2
#define NUMB 3
#define NAVI 4
/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <125>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };
    keymap {
        compatible = "zmk,keymap";
        ALFA { bindings = <
            &kp Q          &kp B          &kp U           &kp F           &kp GRAVE    &none &none    &kp SQT           &kp W           &kp M         &kp G            &kp J
            &hm LCTRL A    &hm LALT I     &hm LGUI N      &hm LSHIFT E    &kp COMMA    &none &none    &kp DOT           &hm RSHIFT T    &hm RGUI H    &hm RALT O       &hm RCTRL S
            &kp V          &kp P          &kp D           &kp R           &kp Z        &none &none    &kp X             &kp C           &kp L         &kp Y            &kp K
            &none          &none          &mo NUMB        &lt PUNC RET    &kp BSLH     &none &none    &kp FSLH          &lt FUNC SPACE  &mo NAVI      &none            &none
            >;
        };
        PUNC { bindings = <
            &kp ESC        &none          &none           &none           &none        &none &none    &none             &kp LBKT        &kp RBKT      &kp DEL          &kp BSPC
            &kp LCTRL      &kp LALT       &kp LGUI        &kp LSHIFT      &none        &none &none    &none             &kp LPAR        &kp RPAR      &kp SEMI         &none
            &none          &none          &none           &none           &none        &none &none    &none             &kp MINUS       &kp EQUAL     &none            &none
            &none          &none          &none           &trans          &none        &none &none    &none             &kp TAB         &none         &none            &none
            >;
        };
        FUNC { bindings = <
            &kp F1         &kp F2         &kp F3          &kp F4          &none        &none &none    &none             &none           &none         &kp DEL          &kp BSPC
            &kp F5         &kp F6         &kp F7          &kp F8          &none        &none &none    &none             &kp RSHIFT      &kp RGUI      &kp RALT         &kp RCTRL
            &kp F9         &kp F10        &kp F11         &kp F12         &none        &none &none    &none             &none           &none         &none            &none
            &none          &none          &none           &none           &none        &none &none    &none             &trans          &none         &none            &none
            >;
        };
        NUMB { bindings = <
            &none          &none         &none            &none           &none        &none &none    &kp KP_PLUS       &kp N7          &kp N8        &kp N9           &kp BSPC
            &kp LCTRL      &kp LALT      &kp LGUI         &kp LSHIFT      &none        &none &none    &kp KP_MINUS      &kp N4          &kp N5        &kp N6           &none
            &none          &none         &none            &none           &none        &none &none    &kp KP_MULTIPLY   &kp N1          &kp N2        &kp N3           &none
            &none          &none         &trans           &none           &none        &none &none    &kp KP_DIVIDE     &kp KP_EQUAL    &kp N0        &none            &none
            >;
        };
        NAVI { bindings = <
            &none          &kp PG_UP      &kp UP          &kp PG_DN       &none        &none &none    &none             &none           &none         &kp DEL          &kp BSPC
            &none          &kp LEFT       &kp DOWN        &kp RIGHT       &none        &none &none    &none             &kp RSHIFT      &kp RGUI      &kp RALT         &kp RCTRL
            &kp C_BRI_DN   &kp C_BRI_UP   &kp C_VOL_DN    &kp C_VOL_UP    &none        &none &none    &none             &none           &none         &none            &none
            &none          &none          &none           &none           &none        &none &none    &none             &none           &trans        &none            &none
            >;
        };
    };
};
