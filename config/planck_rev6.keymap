#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#define ALFA 0
#define SMBL 1
#define FUNC 2
#define NMBR 3
#define NAVI 4
/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <125>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp >;
        };
        gte: tap_dance_2 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_2";
            #binding-cells = <0>;
            tapping-term-ms = <250>;
            bindings = <&kp GRAVE>, <&kp TILDE>, <&kp ESC>;
        };
        bspc_del: backspace_delete {
            compatible = "zmk,behavior-mod-morph";
            label = "BACKSPACE_DELETE";
            #binding-cells = <0>;
            bindings = <&kp BACKSPACE>, <&kp DELETE>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
            keep-mods = <(MOD_RSFT)>;
        };
    };
    keymap {
        compatible = "zmk,keymap";
        ALFA { bindings = <
            &gte            &kp Q           &kp W        &kp E        &kp R            &kp T            &kp Y            &kp U            &kp I        &kp O          &kp P            &bspc_del
            &kp TAB         &hm LALT A      &hm LCTRL S  &hm LGUI D   &hm LSHIFT F     &kp G            &kp H            &hm RSHIFT J     &hm RGUI K   &hm RCTRL L    &hm RALT SEMI    &kp SQT
            &kp CAPS        &kp Z           &kp X        &kp C        &kp V            &kp B            &kp N            &kp M            &kp COMMA    &kp DOT        &kp FSLH         &kp BSLH
            &kp LC(LEFT)    &kp LC(RIGHT)   &kp LC(UP)   &mo NMBR     &lt SMBL SPACE   &lt SMBL SPACE   &lt FUNC SPACE   &lt FUNC SPACE   &mo NAVI     &kp C_VOL_DN   &kp C_VOL_UP     &kp C_MUTE
            >;
        };
        SMBL { bindings = <
            &gte            &kp EXCL        &kp AT       &kp HASH     &kp DOLLAR       &kp PERCENT      &kp CARET        &kp LPAR         &kp RPAR     &kp MINUS      &kp EQUAL        &bspc_del
            &kp TAB         &kp LALT        &kp LCTRL    &kp LGUI     &kp LSHIFT       &none            &none            &kp LBKT         &kp RBKT     &none          &kp SEMI         &kp SQT
            &kp CAPS        &none           &none        &none        &none            &none            &none            &none            &kp LT       &kp GT         &kp FSLH         &kp BSLH
            &kp LC(LEFT)    &kp LC(RIGHT)   &kp LC(UP)   &none        &trans           &trans           &kp RET          &kp RET          &none        &kp C_BRI_DN   &kp C_BRI_UP     &none
            >;
        };
        FUNC { bindings = <
            &gte            &kp F1          &kp F2       &kp F3       &kp F4           &none            &none            &none            &none        &none          &none            &bspc_del
            &kp TAB         &kp F5          &kp F6       &kp F7       &kp F8           &none            &none            &kp RSHIFT       &kp RGUI     &kp RCTRL      &kp RALT         &kp SQT
            &kp CAPS        &kp F9          &kp F10      &kp F11      &kp F12          &none            &none            &none            &none        &none          &none            &kp BSLH
            &kp LC(LEFT)    &kp LC(RIGHT)   &kp LC(UP)   &none        &kp SPACE        &kp SPACE        &trans           &trans           &none        &none          &none            &none
            >;
        };
        NMBR { bindings = <
            &gte            &kp N1          &kp N2       &kp N3       &kp N4           &kp N5           &kp N6           &kp N7           &kp N8       &kp N9         &kp N0           &bspc_del
            &kp TAB         &kp LALT        &kp LCTRL    &kp LGUI     &kp LSHIFT       &none            &kp LPAR         &kp RSHIFT       &kp RGUI     &kp RCTRL      &kp RALT         &kp SQT
            &kp CAPS        &none           &none        &none        &none            &none            &kp RPAR         &kp BSLH         &kp COMMA    &kp DOT        &kp FSLH         &kp BSLH
            &kp LC(LEFT)    &kp LC(RIGHT)   &kp LC(UP)   &trans       &kp SPACE        &kp SPACE        &kp SPACE        &kp SPACE        &none        &none          &none            &none
            >;
        };
        NAVI { bindings = <
            &gte            &none           &none        &kp UP       &none            &none            &none            &none            &none        &none          &none            &bspc_del
            &kp TAB         &none           &kp LEFT     &kp DOWN     &kp RIGHT        &none            &none            &kp RSHIFT       &kp RGUI     &kp RCTRL      &kp RALT         &kp SQT
            &kp CAPS        &none           &kp LG(X)    &kp LG(C)    &kp LG(V)        &none            &none            &none            &none        &none          &none            &kp BSLH
            &kp LC(LEFT)    &kp LC(RIGHT)   &kp LC(UP)   &none        &kp SPACE        &kp SPACE        &kp SPACE        &kp SPACE        &trans       &none          &none            &none
            >;
        };
    };
};
