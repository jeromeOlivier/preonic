#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#define ALFA 0
#define PUNC 1
#define FUNC 2
#define NUMB 3
#define NAVI 4
/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <125>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };
    keymap {
        compatible = "zmk,keymap";
        ALFA { bindings = <
            &kp Q          &kp B          &kp U           &kp F          &kp SEMI          &none &none    &kp SQT    &kp W           &kp M         &kp G            &kp Z
            &hm LCTRL A    &hm LALT I     &hm LGUI N      &hm LSHIFT E   &kp COMMA         &none &none    &kp DOT    &hm RSHIFT T    &hm RGUI H    &hm RCTRL O      &hm RALT S
            &kp V          &kp P          &kp D           &kp R          &kp J             &none &none    &kp K      &kp C           &kp L         &kp Y            &kp X
            &none          &none          &mo FUNC        &kp TAB        &mo PUNC          &none &none    &mo NUMB   &kp SPACE       &mo NAVI      &none            &none
            >;
        };
        PUNC { bindings = <
            &kp ESC        &kp RPAR       &kp LPAR        &kp LG(TAB)    &none             &none &none    &none      &none           &none         &kp EQUAL        &kp BSPC
            &kp LCTRL      &kp LALT       &kp LGUI        &kp LSHIFT     &kp LBKT          &none &none    &kp RBKT   &none           &none         &kp FSLH         &kp BSLH
            &none          &none          &none           &none          &kp LPAR          &none &none    &kp RPAR   &none           &none         &kp GRAVE        &kp MINUS
            &none          &none          &none           &none          &trans            &none &none    &none      &kp RET         &none         &none            &none
            >;
        };
        FUNC { bindings = <
            &none          &none          &none           &none          &none             &none &none    &none      &kp F1          &kp F2        &kp F3           &kp F4
            &kp LCTRL      &kp LALT       &kp LGUI        &kp LSHIFT     &none             &none &none    &none      &kp F5          &kp F6        &kp F7           &kp F8
            &none          &none          &none           &none          &none             &none &none    &none      &kp F9          &kp F10       &kp F11          &kp F12
            &none          &none          &trans          &none          &none             &none &none    &none      &none           &none         &none            &none
            >;
        };
        NUMB { bindings = <
            &none          &kp N1         &kp N2          &kp N3         &kp KP_PLUS       &none &none    &none      &kp CAPS        &kp RC(K)     &kp DEL          &kp BSPC
            &kp KP_EQUAL   &kp N4         &kp N5          &kp N6         &kp KP_MINUS      &none &none    &none      &kp RSHIFT      &kp RGUI      &kp RALT         &kp RCTRL
            &kp KP_DOT     &kp N7         &kp N8          &kp N9         &kp KP_ASTERISK   &none &none    &none      &none           &none         &none            &none
            &none          &none          &kp N0          &kp RET        &kp KP_SLASH      &none &none    &trans     &none           &none         &none            &none
            >;
        };
        NAVI { bindings = <
            &kp PG_UP      &none          &kp UP          &none          &none             &none &none    &none      &kp RG(X)       &kp RG(C)     &kp RG(V)        &kp RG(Z)
            &kp PG_DN      &kp LEFT       &kp DOWN        &kp RIGHT      &none             &none &none    &none      &kp RSHIFT      &kp RGUI      &kp RALT         &kp RCTRL
            &kp C_BRI_DN   &kp C_BRI_UP   &kp C_VOL_DN    &kp C_VOL_UP   &none             &none &none    &none      &kp RG(A)       &kp RG(B)     &kp RG(U)        &kp RG(I)
            &none          &none          &none           &none          &none             &none &none    &none      &none           &trans        &none            &none
            >;
        };
    };
};
